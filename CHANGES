Title:  IronBee Changes

IronBee Changes
===============

IronBee v0.7.0
--------------

**Build**

* Configure now checks for ruby, gem, and ruby_protobuf gem if C++ code is
  enabled.

* Configure now checks for libcurl and yajl and only enabled RIAK support if
  present.

**Engine**

* `ib_tx_t::data` has changed from a generic hash to an array indexed by   
  module index.  This change puts it in line with per-module engine data and 
  per-module context data.  `ib_tx_data_set()` and `ib_tx_data_get()` can be
  used by modules to read/write this data.  

* Added RIAK kvstore.

* Several fixes to dynamic collections in the DPI.

**Modules**

* ac and pcre have been updated to use the new tx data API.

**IronBee++**

* Moved catch, throw, and data support from internals to public.  These 
  routines are not needed if you only use IronBee++ APIs but are very useful
  when accessing the IronBee C API from C++.
  
* Fixed bug with adding to List<T> where T was a ConstX IronBee++ class.

**Automata**

* Intermediate format and Eudoxus now support arbitrary automata metadata in 
  the form of key-value pairs.  All command line generators include an
  `Output-Type` metadata key with value set to the output type as defined by
  `ee`.  `ee` now defaults to using this metadata to determine output type.
  This changes increments the Eudoxus format version and, as such, is not
  compatible with compiled automata from earlier versions.

**Other**

* Removed FTRACE code.

* Various bug fixes and cleanup.

IronBee v0.6.0
--------------

**Build**

* IronBee++ and CLIPP are now built by default.  Use `--disable-cpp` to
  prevent.

* Build system now handles boost and libnids libraries better.  New 
  `--with-boost-suffix` configuration option.

* Removed a number of unnecessary checks in configure.

* Included libhtp source, so this is no longer required.

**Engine**

* Enhanced support for buffering request/response data, including
  runtime support via the setflag action.
  
* Added initial support for persistent data. (see: 
  `include/ironbee/kvstore.h`)

* Partial progress towards rework of configuration state transitions.  
  Currently implicit.  Next version should be gone completely.  

* Events can now be suppressed by setting the `suppress` field.

* Directory creation (`ib_util_mkpath`) rewritten.

**Rules and Configuration**

* Enhanced rule engine diagnostics logging (`RuleEngineLogData`,
  `RuleEngineLogLevel`).

* Simplified Hostname directive by moving IP/Port to a new
  Service directive.

* Enhanced configuration context selection, which now takes Site,
  Service, Hostname and Location into account.

* Added an `InitVar` directive to set custom fields at config time.  

* `SetVar` `=+` operator changed to `+=`.  Also added `-=` and `*=`.

* Added floating point field type; removed unsigned field type.  Note that
  floating point values do not support eq and ne.

* The `ne` operator now correctly compares numbers.

* Initial support for implicit type conversions in operators.

* Fixed `pmf` operator so that relative filenames are based on
  config file location vs CWD.
  
* Enhanced PCRE matching to support setting limits.
  
* `AuditLogFileMode` now works.

* Default of `AuditEngine` is now `RelevantOnly`.

**Lua**

* Updated luajit code to v2.0.0.

* Enhanced Lua rule API with more access to internals.

**Modules**

* Enhanced GeoIP module to use O1/O01 country codes when
  lookups fail.

**Servers**

* Added support for regexp based header editing.

* Rewrote Apache httpd server module for httpd 2.4.

**Automata**

* Added IronAutomata framework for building, modifying, and executing automata
  (see: `automata/doc/example.md`).  Currently works as stand alone library 
  but is not integrated into IronBee.

**CLIPP**

* CLIPP manual updated. (see: `clipp/clipp.md`)

* CLIPP tests now provide more information about failures.

**IronBee++**

* Support for new site API.

* Support for new float field type.

**Documentation**

* Added CHANGES file.

* Many manual updates.

* Doxygen dependency calculation fixed.  `make doxygen` in `docs` should now
  run only if files have changed.
  
* Removed long deprecated `fulldocs` doxygen.  Use `external` or `internal` 
  instead.
  
* Updated to doxygen 1.8.1.
  
**Other**

* Various bug fixes and code cleanup.


