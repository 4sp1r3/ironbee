<?xml version="1.0" encoding="UTF-8"?>
<appendix version="5.0" xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:svg="http://www.w3.org/2000/svg" xmlns:m="http://www.w3.org/1998/Math/MathML"
    xmlns:html="http://www.w3.org/1999/xhtml" xml:id="todo">
    <title>Ideas For Future Improvements</title>
    <para>This document contains the list of things we want to look into.</para>
    <para><emphasis role="bold">Reminder (to ourselves): We will not add features unless we can
            demonstrate clear need.</emphasis></para>
    <section>
        <title>Directive: LoadModule</title>
        <para>Support many instances of the same module:</para>
        <programlisting>LoadModule /path/to/module.so moduleName</programlisting>
        <para>Module name is optional. When not provided, the filename with extension removed is
            used as the name.</para>
        <para>Some ideas to support module parameters, should we need to do it later on:</para>
        <programlisting>&lt;LoadModule /path/to/module.so>
    Param paramName1 paramValue1
    Param paramName2 paramValue2

    &lt;Param paramName3>
        # value3 here, free-form
    &lt;/Param>

    Param paramName4 @file:/path/to/file/with/paramValue4
&lt;/LoadModule></programlisting>
        <para>Modules should be able to hook into the engine in the correct order relative to other
            modules, but should manual tweaking be needed, we could use the following:</para>
        <programlisting>&lt;LoadModule /path/to/module.so>
    HookPriority hookName PRIORITY_FIRST "beforeModule1, beforeModule2" "afterModule1, afterModule2"
&lt;/LoadModule></programlisting>
    </section>
    <section>
        <title>Directive: RequestParamsExtra</title>
        <para>Extract parameters transported in the request URI. The parameter supplied to this
            directive should be a regular expression with named captures. On a match, the named
            captures will be placed in the <literal>ARGS_EXTRA</literal> collection. A new effective
            path will be constructed (using back references?).</para>
    </section>
    <section>
        <title>Variable: ARGS_EXTRA</title>
        <para>Request parameters extracted from RequestParamsExtra.</para>
    </section>
    <section>
        <title>transformation: sqlDecode</title>
        <para>Decodes input in a way similar to how a DBMS would:</para>
        <itemizedlist>
            <listitem>
                <para>Decodes hexadecimal literals that use the SQL standard format
                        <literal>x'HEX_ENCODED_VALUE'</literal> (case insensitive)</para>
            </listitem>
            <listitem>
                <para>Decodes hexadecimal literals that use the ODBC format
                        <literal>0xHEX_ENCODED_VALUE</literal> (case insensitive)</para>
            </listitem>
            <listitem>
                <para>Decodes backslash-escaped characters</para>
            </listitem>
        </itemizedlist>
        <para>References:</para>
        <itemizedlist>
            <listitem>
                <para>MySQL Reference: Hexadecimal Literals
                    http://dev.mysql.com/doc/refman/5.6/en/hexadecimal-literals.html</para>
            </listitem>
            <listitem>
                <para>String Literals
                    http://dev.mysql.com/doc/refman/5.6/en/string-literals.html</para>
            </listitem>
        </itemizedlist>
    </section>
</appendix>
