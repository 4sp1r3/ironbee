### Generated by rprotoc. DO NOT EDIT!
### <proto file: clipp.proto>
# package IronBee.CLIPP.PB;
#
# message ConnectionEvent {
#     optional string local_ip    = 1;
#     optional uint32 local_port  = 2;
#     optional string remote_ip   = 3;
#     optional uint32 remote_port = 4;
# };
#
# message DataEvent {
#     required bytes data = 1;
# };
#
# message RequestEvent {
#     optional bytes raw      = 1;
#     optional bytes method   = 2;
#     optional bytes uri      = 3;
#     optional bytes protocol = 4;
# };
#
# message ResponseEvent {
#     optional bytes raw      = 1;
#     optional bytes protocol = 2;
#     optional bytes status   = 3;
#     optional bytes message  = 4;
# };
#
# message Header {
#     required bytes name  = 1;
#     required bytes value = 2;
# };
#
# message HeaderEvent {
#     repeated Header header = 1;
# };
#
# message Event {
#     required uint32          which            = 1;
#     optional double          pre_delay        = 2;
#     optional double          post_delay       = 3;
#     optional ConnectionEvent connection_event = 4;
#     optional DataEvent       data_event       = 5;
#     optional RequestEvent    request_event    = 6;
#     optional ResponseEvent   response_event   = 7;
#     optional HeaderEvent     header_event     = 8;
# };
#
# message Transaction {
#     repeated Event event = 1;
# };
#
# message Connection {
#     repeated Event       pre_transaction_event  = 1;
#     repeated Transaction transaction            = 2;
#     repeated Event       post_transaction_event = 3;
# };
#
# message Input {
#     optional string     id         = 1;
#     required Connection connection = 2;
# };

require 'protobuf/message/message'
require 'protobuf/message/enum'
require 'protobuf/message/service'
require 'protobuf/message/extend'

module IronBee
  module CLIPP
    module PB
      class ConnectionEvent < ::Protobuf::Message
        defined_in __FILE__
        optional :string, :local_ip, 1
        optional :uint32, :local_port, 2
        optional :string, :remote_ip, 3
        optional :uint32, :remote_port, 4
      end
      class DataEvent < ::Protobuf::Message
        defined_in __FILE__
        required :bytes, :data, 1
      end
      class RequestEvent < ::Protobuf::Message
        defined_in __FILE__
        optional :bytes, :raw, 1
        optional :bytes, :method, 2
        optional :bytes, :uri, 3
        optional :bytes, :protocol, 4
      end
      class ResponseEvent < ::Protobuf::Message
        defined_in __FILE__
        optional :bytes, :raw, 1
        optional :bytes, :protocol, 2
        optional :bytes, :status, 3
        optional :bytes, :message, 4
      end
      class Header < ::Protobuf::Message
        defined_in __FILE__
        required :bytes, :name, 1
        required :bytes, :value, 2
      end
      class HeaderEvent < ::Protobuf::Message
        defined_in __FILE__
        repeated :Header, :header, 1
      end
      class Event < ::Protobuf::Message
        defined_in __FILE__
        required :uint32, :which, 1
        optional :double, :pre_delay, 2
        optional :double, :post_delay, 3
        optional :ConnectionEvent, :connection_event, 4
        optional :DataEvent, :data_event, 5
        optional :RequestEvent, :request_event, 6
        optional :ResponseEvent, :response_event, 7
        optional :HeaderEvent, :header_event, 8
      end
      class Transaction < ::Protobuf::Message
        defined_in __FILE__
        repeated :Event, :event, 1
      end
      class Connection < ::Protobuf::Message
        defined_in __FILE__
        repeated :Event, :pre_transaction_event, 1
        repeated :Transaction, :transaction, 2
        repeated :Event, :post_transaction_event, 3
      end
      class Input < ::Protobuf::Message
        defined_in __FILE__
        optional :string, :id, 1
        required :Connection, :connection, 2
      end
    end
  end
end