# Allow _version and _release to be overridden
%if %{?_version:0}%{!?_version:1}
%define _version @MAJOR_VERSION@.@MINOR_VERSION@.@MICRO_VERSION@
%endif

%if %{?_release:0}%{!?_release:1}
%define _release 1
%endif

%if %{?sysconfdir:0}%{!?sysconfdir:1}
%define _sysconfdir /etc
%else
%define _sysconfdir %{sysconfdir}
%endif

%if %{?ironbee_user:0}%{!?ironbee_user:1}
%define ironbee_user root
%endif
%if %{?ironbee_group:0}%{!?ironbee_group:1}
%define ironbee_group %{ironbee_user}
%endif

# Default: DO NOT build the httpd module
%bcond_with httpd

# Default: DO build the trafficserver module
%bcond_without trafficserver

%bcond_with clang
%if %{with clang}
# disable strict build ids with clang
%undefine _missing_build_ids_terminate_build
%endif
%define prefix   /usr

Summary:        IronBee WAF Base files
Name:           ironbee
Version:        %{_version}
Release:        %{_release}
License:        ASL 2.0
Group:          System Environment/Daemons
Source0:        %{name}-%{version}.tar.gz
URL:            http://www.ironbee.com

BuildRequires: autoconf, automake, libtool, gcc, gcc-c++
BuildRequires: pcre-devel, zlib-devel, libxml2-devel
BuildRequires: uuid-devel

%define boost_version 1.49
BuildRequires: boost-devel >= %{boost_version}

# Require only the parts of boost that ironbee actually uses.
Requires: boost-chrono >= %{boost_version}
Requires: boost-date-time >= %{boost_version}
Requires: boost-filesystem >= %{boost_version}
Requires: boost-iostreams >= %{boost_version}
Requires: boost-program-options >= %{boost_version}
Requires: boost-regex >= %{boost_version}
Requires: boost-system >= %{boost_version}
Requires: boost-thread >= %{boost_version}

%if %{with trafficserver}
BuildRequires: trafficserver-devel >= 3.1.4
%endif

%if %{with httpd}
BuildRequires: httpd-devel
%endif

%description
Universal web application security sensor intended for real-time
monitoring and defense.

%package devel
Summary: IronBee Development files
Group: Development/Libraries

%description devel
Ironbee Development files.

%if %{with trafficserver}
%package trafficserver
Summary: IronBee Apache Trafficserver Plugin
Group: Applications/Internet
Requires: %{name} = %{version}-%{release}, trafficserver

%description trafficserver
Ironbee Apache Trafficserver Plugin
%endif

%if %{with httpd}
%package httpd
Summary: IronBee Apache HTTPD Plugin
Group: Applications/Internet
Requires: %{name} = %{version}-%{release}, httpd

%description httpd
Ironbee Apache HTTPD Plugin
%endif

%prep
%setup -q

%build
#We have to unset existing CFLAGS for LuaJIT compilation
unset CFLAGS
unset CXXFLAGS
unset FFLAGS
%if %{with trafficserver}
%define ts_flags --with-trafficserver=%{_exec_prefix}
%else
%define ts_flags --without-trafficserver
%endif

%if %{with httpd}
%define httpd_flags --with-httpd
%else
%define httpd_flags --without-httpd
%endif

%{_configure} %{ts_flags} %{httpd_flags} \
        --host=%{_host} --build=%{_build} \
        --program-prefix=%{?_program_prefix} \
        --prefix=%{_prefix} \
        --exec-prefix=%{_exec_prefix} \
        --bindir=%{_bindir} \
        --sbindir=%{_sbindir} \
        --sysconfdir=%{_sysconfdir} \
        --datadir=%{_datadir} \
        --includedir=%{_includedir} \
        --libdir=%{_libdir} \
        --libexecdir=%{_libexecdir} \
        --localstatedir=%{_localstatedir} \
        --sharedstatedir=%{_sharedstatedir} \
        --mandir=%{_mandir} \
        --infodir=%{_infodir} \
        --with-manager-control-socket=%{_localstatedir}/run/ironbee \
%if %{with clang}
    	CC="/usr/bin/clang" CXX="/usr/bin/clang++" \
%endif
	RUBY=@RUBY@ GEM=@GEM@

make %{?_smp_mflags}

%install
rm -rf $RPM_BUILD_ROOT
%makeinstall

mkdir -p $RPM_BUILD_ROOT%{_localstatedir}/run/ironbee

%clean

%if %{with trafficserver}
%post trafficserver
if [ "$1" -ge 1 ]; then
   configfile=%{_sysconfdir}/trafficserver/plugin.config
   # Remove existing Ironbee plugin configuration segment.
   sed -i.save -e '/^### START IRONBEE PLUGIN/,/^### END IRONBEE PLUGIN/d' $configfile

   if ! grep -q "### START IRONBEE PLUGIN" "$configfile" ; then
      echo "### START IRONBEE PLUGIN" >>$configfile
      echo libloader.so %{_libdir}/libironbee.so >>$configfile
      echo %{_libexecdir}/ts_ironbee.so %{_sysconfdir}/ironbee/ironbee.conf >>$configfile
      echo "### END IRONBEE PLUGIN" >>$configfile
   fi
fi


%postun trafficserver
if [ "$1" = 0 ]; then
   configfile=%{_sysconfdir}/trafficserver/plugin.config
   if egrep -q "^### START IRONBEE PLUGIN" "$configfile" && egrep -q "^### END IRONBEE PLUGIN" "$configfile"; then
      sed -i.save -e '/^### START IRONBEE PLUGIN/,/^### END IRONBEE PLUGIN/d' $configfile
   fi
fi

%endif

%files
%attr(0755,root,root) %{_bindir}/ibctl

%attr(0755,root,root) %{_libdir}/libhtp-*.so.*
%attr(0755,root,root) %{_libdir}/libhtp.so
%attr(0755,root,root) %{_libdir}/libhtp.la
%attr(0755,root,root) %{_libdir}/libhtp.a
%attr(0755,root,root) %{_libdir}/libironbee-*.so.*
%attr(0755,root,root) %{_libdir}/libironbee.so
%attr(0755,root,root) %{_libdir}/libironbee.la
%attr(0755,root,root) %{_libdir}/libibutil-*.so.*
%attr(0755,root,root) %{_libdir}/libibutil.so
%attr(0755,root,root) %{_libdir}/libibutil.la
%attr(0755,root,root) %{_libdir}/libiaeudoxus-*.so.*
%attr(0755,root,root) %{_libdir}/libiaeudoxus.so
%attr(0755,root,root) %{_libdir}/libiaeudoxus.la

%attr(0755,root,root) %{_libdir}/libibpp-*.so.*
%attr(0755,root,root) %{_libdir}/libibpp.so
%attr(0755,root,root) %{_libdir}/libibpp.la

%attr(0755,root,root) %{_libdir}/ironbee
%attr(0755,root,root) %{_libexecdir}/ibmod_*
%attr(0755,root,root) %{_libexecdir}/ibcutil.*
%attr(0755,root,root) %{_libexecdir}/ibjson.*
%attr(0755,root,root) %{_libdir}/pkgconfig/*.*
%attr(0644,root,root) %{_sysconfdir}/ironbee/ironbee.conf.example
%config(noreplace) %attr(0644,root,root) %{_sysconfdir}/ironbee/ironbee.conf
%attr(0755, %{ironbee_user}, %{ironbee_group}) %dir %{_localstatedir}/run/ironbee

%files devel
%attr(0755,root,root) %{_bindir}/ac_generator
%attr(0755,root,root) %{_bindir}/clipp
%attr(0755,root,root) %{_bindir}/ec
%attr(0755,root,root) %{_bindir}/ee
%attr(0755,root,root) %{_bindir}/optimize
%attr(0755,root,root) %{_bindir}/to_dot
%attr(0755,root,root) %{_bindir}/trie_generator
%attr(0755,root,root) %{_bindir}/ib_convert_modsec_rules.pl

%attr(0644,root,root) %{_includedir}/ironbee/*
%attr(0644,root,root) %{_includedir}/htp/*
%attr(0644,root,root) %{_includedir}/ironautomata/*
%attr(0644,root,root) %{_includedir}/ironbeepp/*

%attr(0755,root,root) %{_libdir}/libironautomata-*.so.*
%attr(0755,root,root) %{_libdir}/libironautomata.so
%attr(0755,root,root) %{_libdir}/libironautomata.la
%attr(0755,root,root) %{_libdir}/libclipp.la
%attr(0755,root,root) %{_libdir}/libclipp.so
%attr(0755,root,root) %{_libdir}/libclipp.so.*

%attr(0755,root,root) %{_libexecdir}/ironbee/clipp/*.rb
%attr(0644,root,root) %{_libexecdir}/ironbee/clipp/*.erb

%if %{with trafficserver}
%files trafficserver
%attr(0755,root,root) %{_libexecdir}/ts_ironbee.*
%endif

%if %{with httpd}
%files httpd
%attr(0755,root,root) %{_libexecdir}/mod_ironbee.*
%endif

